/**
 * @packageDocumentation
 * @module api.functional.reservations
 */
//================================================================
import { AesPkcs5 } from "./../../__internal/AesPkcs5";
import { Fetcher } from "./../../__internal/Fetcher";
import { Primitive } from "./../../Primitive";
import type { IConnection } from "./../../IConnection";

import type { IPaymentSource } from "./../../structures/IPaymentSource";
import type { IPaymentReservation } from "./../../structures/IPaymentReservation";


/**
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 * @controller PaymentReservationsController.at()
 * @path PATCH /reservations/:id
 */
export function at
    (
        connection: IConnection,
        id: string,
        input: Primitive<at.Input>
    ): Promise<at.Output>
{
    return Fetcher.fetch
    (
        connection,
        at.CONFIG,
        at.METHOD,
        at.path(id),
        input
    );
}
export namespace at
{
    export type Input = Primitive<IPaymentSource.IPassword>;
    export type Output = Primitive<IPaymentReservation>;


    export const METHOD = "PATCH";
    export const PATH = "/reservations/:id";
    export const CONFIG = {
        input_encrypted: true,
        output_encrypted: true,
    };

    export function path(id: string): string
    {
        return `/reservations/${id}`;
    }
}

/**
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 * @controller PaymentReservationsController.store()
 * @path POST /reservations
 */
export function store
    (
        connection: IConnection,
        input: Primitive<store.Input>
    ): Promise<store.Output>
{
    return Fetcher.fetch
    (
        connection,
        store.CONFIG,
        store.METHOD,
        store.path(),
        input
    );
}
export namespace store
{
    export type Input = Primitive<IPaymentReservation.IStore>;
    export type Output = Primitive<IPaymentReservation>;


    export const METHOD = "POST";
    export const PATH = "/reservations";
    export const CONFIG = {
        input_encrypted: true,
        output_encrypted: true,
    };

    export function path(): string
    {
        return `/reservations`;
    }
}

/**
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 * @controller PaymentReservationsController.get()
 * @path PATCH /reservations/get
 */
export function get
    (
        connection: IConnection,
        input: Primitive<get.Input>
    ): Promise<get.Output>
{
    return Fetcher.fetch
    (
        connection,
        get.CONFIG,
        get.METHOD,
        get.path(),
        input
    );
}
export namespace get
{
    export type Input = Primitive<IPaymentSource.IAccessor>;
    export type Output = Primitive<IPaymentReservation>;


    export const METHOD = "PATCH";
    export const PATH = "/reservations/get";
    export const CONFIG = {
        input_encrypted: true,
        output_encrypted: true,
    };

    export function path(): string
    {
        return `/reservations/get`;
    }
}



//---------------------------------------------------------
// TO PREVENT THE UNUSED VARIABLE ERROR
//---------------------------------------------------------
AesPkcs5;
Fetcher;
Primitive;
